{"version":3,"sources":["components/Logo/brain.png","components/Title/Title.js","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Title","react_default","a","createElement","className","Navigation","_ref","onRouteChange","signedIn","style","display","justifyContent","onClick","Signin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signedInEmail","target","value","onPasswordChange","signedInPassword","hi","console","log","onSubmitSignin","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","data","id","props","loadUser","type","name","onChange","autoComplete","React","Component","Logo","tilt_default","options","max","height","width","src","brain","alt","Rank","entries","concat","ImageLinkForm","onInputChange","onButtonClick","FaceRecognition","image","box","top","bottom","left","right","Register","onNameChange","onSubmitRegister","particleOption","particles","number","density","enable","value_area","App","user","joinDate","joindate","faceDetection","box_details","outputs","regions","region_info","bounding_box","document","getElementById","top_row","bottom_row","left_col","right_col","displayFaceBox","facebox","input","imageUrl","assign","catch","err","option","route","particles_default","param","components_Title_Title","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_Signin_Signin","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edd4aaa5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.c81a95e9.png\";","import React from 'react';\r\nimport './Title.css';\r\nconst Title=()=>{\r\n \r\nreturn(\r\n    <div className='titl'>\r\n      <h1 className=\" f1 lh-solid\">FACE DETECT</h1>      \r\n    </div>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default Title;","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation=({onRouteChange,signedIn})=>{\r\nif(signedIn){    \r\nreturn(\r\n    <div>\r\n    <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n        <p className='sig f4 fw6 link white pa3 pointer' onClick={()=>onRouteChange('signinPage')}>Sign-Out</p>\r\n    </nav>    \r\n    </div>\r\n)\r\n}\r\nelse{\r\n    return(\r\n        <div>\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <p className='sig f4 fw6 link white pa3 pointer' onClick={()=>onRouteChange('signinPage')}>Sign-In</p>\r\n            {/* <p className='sig f4 fw6 link white pa3 pointer' onClick={()=>onRouteChange('Register')}>Register</p> */}\r\n        </nav>    \r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nclass Signin extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      signedInEmail: \"guest@gmail.com\",\r\n      signedInPassword: \"guest\",\r\n    };\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({ signedInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ signedInPassword: event.target.value });\r\n  };\r\n  hi = () => {\r\n    console.log(\"Sign-in\");\r\n  };\r\n\r\n  onSubmitSignin = () => {\r\n    fetch(\"https://inquisitive-waistcoat-bee.cyclic.app/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signedInEmail,\r\n        password: this.state.signedInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.id) {\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ma5\">\r\n        <article className=\"br3 bw2 ba  b--black mv4 br4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <form className=\"measure white\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                <p className=\"white\">\r\n                  Email: guest@gmail.com \r\n                </p>\r\n                <hr />\r\n                <p className=\"white\">Password: guest</p>\r\n\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6 \">Email</label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba white bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                    onChange={this.onEmailChange}\r\n                    value=\"guest@gmail.com\"\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\">Password</label>\r\n                  <input\r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={this.onPasswordChange}\r\n                    value=\"guest\"\r\n                    autoComplete=\"true\"\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <input\r\n                  className=\"b w3 ph3 pv2 center black ba1 b--black blue br-pill bg-white grow pointer f6 dib\"\r\n                  value=\"Sign in\"\r\n                  onClick={this.onSubmitSignin}\r\n                  onChange={this.hi}\r\n                />\r\n              </div>\r\n              <div className=\"lh-copy mt3\">\r\n                {/* <p\r\n                  className=\"f6 link dim white db pointer\"\r\n                  onClick={() => this.props.onRouteChange(\"register\")}\r\n                >\r\n                  Register\r\n                </p> */}\r\n              </div>\r\n            </form>\r\n          </main>\r\n        </article>\r\n        {/* <p className='white'>Email: guest@gmail.com  <hr></hr><span>Password: guest</span></p> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const Signin=({onRouteChange})=>{\r\n// return(\r\n//     <div className='ma5'>\r\n//         <article className=\"br3 bw2 ba  b--black mv4 br4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n//         <main className=\"pa4 black-80\">\r\n//         <form className=\"measure white\">\r\n//         <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n//         <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n//         <div className=\"mt3\">\r\n//         <label className=\"db fw6 lh-copy f6\">Email</label>\r\n//         <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n//         </div>\r\n//         <div className=\"mv3\">\r\n//         <label className=\"db fw6 lh-copy f6\">Password</label>\r\n//         <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n//         </div>\r\n//         </fieldset>\r\n//         <div className=\"\">\r\n//         <input className=\"b ph3 pv2 input-reset ba1 b--black blue br-pill bg-white grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" onClick={()=>onRouteChange('home')}/>\r\n//         </div>\r\n//         <div className=\"lh-copy mt3\">\r\n//         <p className=\"f6 link dim white db pointer\" onClick={()=>onRouteChange('register')}>Register</p>\r\n//         </div>\r\n//         </form>\r\n//         </main>\r\n//         </article>\r\n//     </div>\r\n// )\r\n// }\r\n// }\r\n\r\nexport default Signin;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\n\r\nimport brain  from './brain.png'\r\nimport './Logo.css';\r\n\r\nconst Logo=()=>{\r\nreturn(\r\n    <div>\r\n        <Tilt className=\"Tilt br2 ma3 shadow-2\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner\">\r\n            <img src={brain} alt='logo'/>\r\n        </div>\r\n        </Tilt>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Rank.css'\r\n\r\nconst Rank=({name,entries})=>{\r\nreturn(\r\n    <div className='ma5'>\r\n        <p className='white fw6 f3'>{`${name}, Your current rank is ...`}</p><br/>\r\n        <p className='rankno white fw8 f1 mt0 grow'><span>{entries}</span></p>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\n\r\nconst ImageLinkForm=({onInputChange,onButtonClick})=>{\r\nreturn(\r\n    <div>\r\n        <p className='fw5 white'> This app will detect faces in your pictures. Give it a try</p>\r\n        {/* <div classname='search pa4 br3 shadow-5'>\r\n            <input className='f4 pa2 w-70' type='text'/>\r\n            <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'>Detect</button>\r\n        </div> */}\r\n        <div className='center'>\r\n        <div className='form center pa4 br4 shadow-5'>\r\n          <input className='hovr f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n          <button\r\n            className='w-30 grow f3 fw6 link ph3 pv2 dib white bg-purple ima' onClick={onButtonClick} >Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition=({image,box})=>{\r\nreturn(\r\n    <div className='center'>\r\n    <div className='imagediv absolute mt2'>\r\n    <img  id=\"inputImage\" alt='' className='imagesearch' src={image} /> \r\n    <div className='bounding-box' style={{top:box.top,bottom:box.bottom,left:box.left,right:box.right}}></div>\r\n    </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass Register extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"\",\r\n            email:\"\",\r\n            password:\"\"\r\n        }\r\n    }\r\n\r\n    onNameChange=(event)=>{\r\n        this.setState({name:event.target.value});\r\n    }\r\n    onEmailChange=(event)=>{\r\n        this.setState({email:event.target.value});\r\n    }\r\n    onPasswordChange=(event)=>{\r\n        this.setState({password:event.target.value});\r\n    }\r\n    hi=()=>{\r\n        console.log('register');\r\n    }\r\n    onSubmitRegister=()=>{\r\n\r\n        fetch('https://inquisitive-waistcoat-bee.cyclic.app/register',{\r\n            method:'post',\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body: JSON.stringify({\r\n                name:this.state.name,\r\n                email:this.state.email,\r\n                password:this.state.password\r\n            })\r\n            })\r\n        .then( response =>response.json())\r\n        .then( data=> {\r\n            if(data.id){\r\n                this.props.loadUser(data);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n        \r\n\r\n    }\r\n\r\n\r\n    render(){\r\n    return(\r\n        <div>\r\n            <article className=\"br3 bw2 ba b--black mv4 br4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n            <form className=\"measure white\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n            <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\">Name</label>\r\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" onChange={this.onNameChange}/>\r\n            </div>\r\n            <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\">Email</label>\r\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" onChange={this.onEmailChange}/>\r\n            </div>\r\n            <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\">Password</label>\r\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" onChange={this.onPasswordChange}/>\r\n            </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n            <input className=\"b w4  pl5 pv2 ba1 b--black blue br-pill bg-white grow pointer f6 dib\"  value=\"Register\" onClick={this.onSubmitRegister} onChange={this.hi}/>\r\n            </div>\r\n            </form>\r\n            </main>  \r\n            </article> \r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Particles from 'react-particles-js';\r\n\r\nimport Title from './components/Title/Title';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Signin from './components/Signin/Signin';\r\nimport Logo from './components/Logo/Logo';\r\nimport Rank from './components/Rank/Rank';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Register from './components/Register/Register';\r\n\r\nconst particleOption={\r\n      particles: {\r\n        number: {\r\n          value:90,\r\n          density:{\r\n            enable:true,\r\n            value_area:1000\r\n          }\r\n        }\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      input:'',\r\n      imageUrl:'',\r\n      box:{},\r\n      route:'signinPage',\r\n      signedIn:false,\r\n      user:{\r\n        id      : '',\r\n        name    : '',\r\n        email   : '',\r\n        password: '',\r\n        entries : 0,\r\n        joinDate:'',\r\n      }\r\n    }\r\n  }\r\n\r\n  loadUser=(data)=>{\r\n    this.setState({user:{\r\n        id      : data.id,\r\n        name    : data.name,\r\n        email   : data.email,\r\n        password: data.password,\r\n        entries : data.entries,\r\n        joinDate: data.joindate,\r\n    }\r\n    })\r\n  }\r\n  faceDetection=(data)=>{\r\n\r\n     const box_details=data.outputs[0].data.regions[0].region_info.bounding_box;\r\n     const image=document.getElementById(\"inputImage\");\r\n     const width=image.width;\r\n     const height=image.height;\r\n     const facebox={\r\n       top   : box_details.top_row * height,\r\n       bottom: height-(box_details.bottom_row*height),\r\n       left  : box_details.left_col*width,\r\n       right : width-(box_details.right_col*width),\r\n     }\r\n     return facebox;\r\n  }\r\n\r\n  displayFaceBox=(facebox)=>{\r\n    this.setState({box:facebox});\r\n  }\r\n\r\n\r\n  onInputChange=(event)=>{\r\n    this.setState({input:event.target.value});\r\n    }\r\n\r\n  onButtonClick=()=>{\r\n    this.setState({imageUrl:this.state.input});\r\n        fetch('https://inquisitive-waistcoat-bee.cyclic.app/imageurl',{\r\n        method:'post',\r\n        headers:{'Content-Type':'application/json'},\r\n        body:JSON.stringify({\r\n            input:this.state.input\r\n        })\r\n        })\r\n        .then(response => response.json())\r\n       .then(response=>{\r\n        console.log('response',response);\r\n          if(response){\r\n            fetch('https://inquisitive-waistcoat-bee.cyclic.app/image',{\r\n                method:'put',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                   id:this.state.user.id\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState(Object.assign(this.state.user,{entries:data}))\r\n            })\r\n          }\r\n          this.displayFaceBox(this.faceDetection(response));\r\n          \r\n       })\r\n     .catch(err=>console.log(err));\r\n  }\r\n\r\n  onRouteChange=(option)=>{\r\n    if(option==='home'){\r\n      this.setState({signedIn:true});\r\n    }\r\n    else if(option==='signinPage'){\r\n      this.setState({signedIn:false});\r\n      this.setState({imageUrl:''});\r\n    }\r\n      this.setState({route:option});    \r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particle' param={particleOption}/>\r\n        <Title/>\r\n\r\n        <Navigation onRouteChange={this.onRouteChange} signedIn={this.state.signedIn}/>\r\n        { \r\n        this.state.route === 'home'\r\n        ?\r\n          <div>     \r\n            <Logo/>\r\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\r\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonClick={this.onButtonClick}/>\r\n            <FaceRecognition image={this.state.imageUrl} box={this.state.box}/> \r\n          </div>\r\n        :\r\n          (\r\n            this.state.route === 'signinPage'\r\n            ?\r\n            <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n            :\r\n            <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>          \r\n          )         \r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}